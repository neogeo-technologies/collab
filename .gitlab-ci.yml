stages:
  - test
  - Static analysis
  - build
  - deploy

variables:
  SONAR_PROJECTKEY: "$CI_PROJECT_NAME"
  SONAR_HOST_URL: "https://sonarqube.neogeo.fr"
  SONAR_LOGIN: $SONAR_TOKEN
  GIT_DEPTH: 0
  # Used to configure CI Test
  POSTGRES_DB: geocontrib
  POSTGRES_USER: geocontrib
  POSTGRES_PASSWORD: geocontrib
  POSTGRES_HOST_AUTH_METHOD: trust


build testing docker image:
  stage: build
  only:
    - develop
  tags:
    - build_docker
  variables:
    DOCKER_TAG: testing
  script:
    - cat $DOCKER_LOGIN | docker login --username $DOCKER_LOGIN --password-stdin
    - cd docker
    - docker-compose build geocontrib
    - docker-compose push geocontrib
    - echo Image docker neogeo/geocontrib:testing livrée

deploy testing docker image:
  stage: deploy
  only:
    - develop
  tags:
    - build
  image:
    name: curlimages/curl
  script:
    - curl -X POST      -F token=$TRIGGER_TOKEN -F ref=main      https://git.neogeo.fr/api/v4/projects/226/trigger/pipeline

build stable docker image:
  stage: build
  only:
    - master
  tags:
    - build
  image:
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: [""]
  script:
    - mkdir -p /kaniko/.docker
    - echo "{\"auths\":{\"https://index.docker.io/v1/\":{\"auth\":\"$DOCKER_AUTH\"}}}" > /kaniko/.docker/config.json
    - /kaniko/executor --context $CI_PROJECT_DIR --dockerfile $CI_PROJECT_DIR/Dockerfile --destination neogeo/geocontrib:latest
    - echo Image docker neogeo/geocontrib:latest livrée

build tagged docker image:
  stage: build
  only:
    - tags
  tags:
    - build
  image:
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: [""]
  script:
    - mkdir -p /kaniko/.docker
    - echo "{\"auths\":{\"https://index.docker.io/v1/\":{\"auth\":\"$DOCKER_AUTH\"}}}" > /kaniko/.docker/config.json
    - /kaniko/executor --context $CI_PROJECT_DIR --dockerfile $CI_PROJECT_DIR/Dockerfile --destination neogeo/geocontrib:$CI_COMMIT_TAG
    - echo Image docker neogeo/geocontrib:$CI_COMMIT_TAG livrée


sonarqube-check:
  image:
    name: sonarsource/sonar-scanner-cli:latest
    entrypoint: [""]
  only:
    - develop
  stage: Static analysis
  dependencies:
    - test
  script:
    - sonar-scanner -Dsonar.qualitygate.wait=true -Dsonar.projectKey=$CI_PROJECT_NAME -Dsonar.projectName=$CI_PROJECT_NAME -Dsonar.projectVersion=$CI_COMMIT_BRANCH

test:
  stage: test
  image: python:3.7
  services:
    - redis
    - postgis/postgis
  variables:
    REDIS_HOST: "redis"
    DB_HOST: "postgis-postgis"
  before_script:
    - apt update && apt install -y --no-install-recommends libproj-dev gdal-bin
  script:
    - pip install -r requirements-dev.txt -r requirements.txt
    - django-admin startproject config .
    - cp -r config_sample/* config/
    - ./manage.py check
    - ./manage.py makemigrations --check
    - pytest --junitxml=xunit-reports/xunit-result-pytest.xml --cov-report xml:coverage-reports/coverage-pytest.xml --cov .
  artifacts:
    paths:
    - coverage-reports/
    - xunit-reports/
    expire_in: 1 week

